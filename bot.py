import os
import re
import telebot
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# Initialize the bot
bot = telebot.TeleBot(os.getenv("BOT_TOKEN"))

# Define the categories
categories = ["1.–î–ª—è —á–∞—Ç–∞ —Å—Ç—Ä–∏–Ω–≥–µ—Ä–æ–≤", "2.–î–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ 360", "3.–î–ª—è —á–∞—Ç–∞ –¢–µ—Ä–º–∏–Ω–∞–ª –¥–æ—Ä–∞–±–æ—Ç–∫–∏", "4.–ú–ê –ü–æ–¥–º–°–µ–≥–æ–¥–Ω—è –º—É–Ω–∏—Ü–∏–ø–∞–ª—ã"]

# Handler for /start command
@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = telebot.types.InlineKeyboardMarkup()
    for category in categories:
        button = telebot.types.InlineKeyboardButton(category.split(".")[1], callback_data=category)
        markup.add(button)
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∑–∞–º–µ—Ç–∫–∏ –≤ —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö. –í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –≤ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É:", reply_markup=markup)

# Handler for inline keyboard button presses
@bot.callback_query_handler(func=lambda call: True)
def save_note_callback(call):
    categories_to_save = [call.data]
    message = call.message
    bot.answer_callback_query(call.id, "–ó–∞–º–µ—Ç–∫–∞ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}".format(call.data.split(".")[1]))
    bot.edit_message_text("–û—Ç–ø—Ä–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å:", message.chat.id, message.message_id)
    bot.register_next_step_handler(message, save_note_multiple_categories, categories_to_save)
@bot.message_handler(commands=['view'])
def view_file(message):
    try:
        # Get the file name from the command arguments
        file_name = message.text.split()[1]
        # Add the .md extension if it's not already included
        if not file_name.endswith('.md'):
            file_name += '.md'
        # Open the file and read its contents
        with open(file_name, "r", encoding="utf-8") as f:
            file_content = f.read()
        # Send the file's contents to the user as a message
        bot.reply_to(message, file_content)
    except IndexError:
        # If no file name is specified, display an error message
        bot.reply_to(message, "–û—à–∏–±–∫–∞. –ù–µ —É–∫–∞–∑–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞.")
    except FileNotFoundError:
        # If the file is not found, display an error message
        bot.reply_to(message, "–û—à–∏–±–∫–∞. –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")


# Handler for all other messages
def save_note_multiple_categories(message, categories_to_save):
    clean_message = re.sub(r'\\d+', '', message.text).strip()
    saved_categories = []
    for category in categories_to_save:
        filename = category.split(".")[1].replace(" ", "_") + ".md"
        filepath = os.path.join(os.getcwd(), filename)
        with open(filepath, "a", encoding="utf-8") as f:
            f.write("üìå " + clean_message + "\n\n")
        saved_categories.append(category.split(".")[1])
    categories_str = ', '.join(saved_categories)
    bot.reply_to(message, f"–ó–∞–º–µ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö: {categories_str}")
    markup = telebot.types.InlineKeyboardMarkup()
    for category in categories:
        button = telebot.types.InlineKeyboardButton(category.split(".")[1], callback_data=category)
        markup.add(button)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –≤ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É:", reply_markup=markup)


# Start the bot
bot.polling()
