import telebot
import os

bot = telebot.TeleBot("6093967066:AAFrAi3LwxYZ0vj8PDJXce7RIY9OZt84jpA")

# List of categories
categories = ["1.–î–ª—è_—á–∞—Ç–∞_—Å—Ç—Ä–∏–Ω–≥–µ—Ä–æ–≤", "2.–î–ª—è_–ø–æ–¥–¥–µ—Ä–∂–∫–∏_360", "3.–î–ª—è_—á–∞—Ç–∞_–¢–µ—Ä–º–∏–Ω–∞–ª_–¥–æ—Ä–∞–±–æ—Ç–∫–∏", "4.–î–ª—è_—á–∞—Ç–∞_–ú—É–ª—å—Ç–∏–∞–¥–º–∏–Ω–∫–∞_–ü–æ–¥–º_–°–µ–≥–æ–¥–Ω—è+–º—É–Ω–∏—Ü–∏–ø–∞–ª—ã"]

# Create files for each category, if they don't already exist
for category in categories:
    filename = category.split(".")[1] + ".md"
    filepath = os.path.join(os.getcwd(), filename)
    if not os.path.exists(filepath):
        with open(filepath, "w", encoding="utf-8") as f:
            f.write("# –ó–∞–º–µ—Ç–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {}\\\\n\\\\n".format(category))

# Handler for /start command
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∑–∞–º–µ—Ç–∫–∏ –≤ —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö. –ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫ –∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è.")

# Handler for /help command
@bot.message_handler(commands=['help'])
def send_help(message):
    text = "–ß—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É, –≤—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –Ω–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ù–∞–ø—Ä–∏–º–µ—Ä, '1 –ü—Ä–∏–≤–µ—Ç, —á–∞—Ç —Å—Ç—Ä–∏–Ω–≥–µ—Ä–æ–≤!'\\\\n\\\\n"
    text += "–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–º–µ—Ç–∫–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –Ω–∞–ø–∏—à–∏ '/view –Ω–∞–∑–≤–∞–Ω–∏–µ_—Ñ–∞–π–ª–∞'.\\\\n"
    text += "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏:\\\\n"
    for category in categories:
        text += category + "\\\\n"
    bot.reply_to(message, text)

# Handler for /view command
@bot.message_handler(commands=['view'])
def view_file(message):
    try:
        # Get the file name from the command arguments
        file_name = message.text.split()[1]
        # Add the .md extension if it's not already included
        if not file_name.endswith('.md'):
            file_name += '.md'
        # Open the file and read its contents
        with open(file_name, "r", encoding="utf-8") as f:
            file_content = f.read()
        # Send the file's contents to the user as a message
        bot.reply_to(message, file_content)
    except IndexError:
        # If no file name is specified, display an error message
        bot.reply_to(message, "–û—à–∏–±–∫–∞. –ù–µ —É–∫–∞–∑–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞.")
    except FileNotFoundError:
        # If the file is not found, display an error message
        bot.reply_to(message, "–û—à–∏–±–∫–∞. –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")

# Handler for all other messages
@bot.message_handler(func=lambda message: True)
def save_note_multiple_categories(message):
    categories_to_save = []
    for word in message.text.split():
        if word.isdigit() and int(word) in range(1, 5):
            categories_to_save.append(categories[int(word)-1])
    if categories_to_save:
        for category in categories_to_save:
            filename = category.split(".")[1] + ".md"
            filepath = os.path.join(os.getcwd(), filename)
            with open(filepath, "a", encoding="utf-8") as f:
                f.write("üìå " + message.text.strip() + "\n\n")
        bot.reply_to(message, "–ó–∞–º–µ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ {} –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö.".format(len(categories_to_save)))
    else:
        bot.reply_to(message, "–û—à–∏–±–∫–∞. –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.")

bot.polling()

